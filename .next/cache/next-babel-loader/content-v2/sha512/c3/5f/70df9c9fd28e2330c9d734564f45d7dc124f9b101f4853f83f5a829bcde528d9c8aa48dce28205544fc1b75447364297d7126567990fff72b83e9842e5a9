{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projects\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport classes from \"../../components/meetups/meetupDetail.module.css\";\n\nfunction MeetupDetail(props) {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.detail,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.meetup.image,\n      alt: props.meetup.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.meetup.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"address\", {\n      children: props.meetup.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.meetup.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://fadhel:fadhel@cluster0.pi09p.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close;\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://fadhel:fadhel@cluster0.pi09p.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const id = ObjectId(meetupId);\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: id\n  });\n  client.close;\n  console.log(selectedMeetup);\n  return {\n    props: {\n      meetup: {\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        id: selectedMeetup._id.toString(),\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetail;","map":{"version":3,"sources":["D:/Projects/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Fragment","MongoClient","ObjectId","classes","MeetupDetail","props","detail","meetup","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","params","meetupId","toString","getStaticProps","context","id","selectedMeetup","findOne","console","log"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,OAAP,MAAoB,kDAApB;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,sBAEE;AAAS,IAAA,SAAS,EAAEF,OAAO,CAACG,MAA5B;AAAA,4BACE;AAAK,MAAA,GAAG,EAAED,KAAK,CAACE,MAAN,CAAaC,KAAvB;AAA8B,MAAA,GAAG,EAAEH,KAAK,CAACE,MAAN,CAAaE;AAAhD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKJ,KAAK,CAACE,MAAN,CAAaE;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAUJ,KAAK,CAACE,MAAN,CAAaG;AAAvB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAIL,KAAK,CAACE,MAAN,CAAaI;AAAjB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AASD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,4FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAalB,MAAD,KAAa;AAC9BmB,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEpB,MAAM,CAACa,GAAP,CAAWQ,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMd,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,4FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMc,EAAE,GAAG7B,QAAQ,CAACyB,QAAD,CAAnB;AACA,QAAMK,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAEW;AAAP,GAA1B,CAA7B;AACAlB,EAAAA,MAAM,CAACS,KAAP;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACA,SAAO;AACL3B,IAAAA,KAAK,EAAE;AACLE,MAAAA,MAAM,EAAE;AACNE,QAAAA,KAAK,EAAEuB,cAAc,CAACvB,KADhB;AAENC,QAAAA,OAAO,EAAEsB,cAAc,CAACtB,OAFlB;AAGNF,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAHhB;AAINuB,QAAAA,EAAE,EAAEC,cAAc,CAACZ,GAAf,CAAmBQ,QAAnB,EAJE;AAKNjB,QAAAA,WAAW,EAAEqB,cAAc,CAACrB;AALtB;AADH;AADF,GAAP;AAWD;AAED,eAAeP,YAAf","sourcesContent":["import { Fragment } from \"react\";\r\n\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport classes from \"../../components/meetups/meetupDetail.module.css\";\r\nfunction MeetupDetail(props) {\r\n  return (\r\n\r\n    <section className={classes.detail}>\r\n      <img src={props.meetup.image} alt={props.meetup.title} />\r\n      <h1>{props.meetup.title}</h1>\r\n      <address>{props.meetup.address}</address>\r\n      <p>{props.meetup.description}</p>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://fadhel:fadhel@cluster0.pi09p.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close;\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://fadhel:fadhel@cluster0.pi09p.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const id = ObjectId(meetupId);\r\n  const selectedMeetup = await meetupsCollection.findOne({ _id: id });\r\n  client.close;\r\n  console.log(selectedMeetup);\r\n  return {\r\n    props: {\r\n      meetup: {\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n        id: selectedMeetup._id.toString(),\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetail;\r\n"]},"metadata":{},"sourceType":"module"}