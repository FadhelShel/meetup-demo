{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projects\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport Head from 'next/head';\nimport classes from \"../../components/meetups/meetupDetail.module.css\";\n\nfunction MeetupDetail(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetail;\nexport var __N_SSG = true;\nexport default MeetupDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetail\");","map":{"version":3,"sources":["D:/Projects/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Fragment","Head","classes","MeetupDetail","props"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,OAAP,MAAoB,kDAApB;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,sBACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KAPQD,Y;;AAkDT,eAAeA,YAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport Head from 'next/head';\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport classes from \"../../components/meetups/meetupDetail.module.css\";\r\nfunction MeetupDetail(props) {\r\n  return (\r\n    <Fragment>\r\n\r\n    </Fragment>\r\n    \r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://fadhel:fadhel@cluster0.pi09p.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close;\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://fadhel:fadhel@cluster0.pi09p.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const id = ObjectId(meetupId);\r\n  const selectedMeetup = await meetupsCollection.findOne({ _id: id });\r\n  client.close;\r\n  console.log(selectedMeetup);\r\n  return {\r\n    props: {\r\n      meetup: {\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n        id: selectedMeetup._id.toString(),\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetail;\r\n"]},"metadata":{},"sourceType":"module"}